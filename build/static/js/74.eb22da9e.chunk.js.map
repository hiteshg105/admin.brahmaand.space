{"version":3,"sources":["views/apps/calendar/AddEventSidebar.js","views/apps/brahmaand/leaderboard/LeaderBoardList.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["eventColors","business","work","personal","others","React","Component","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","LeaderBoardList","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","apply","concat","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","pinned","window","innerWidth","filter","cellRendererFramework","params","_params$data","createElement","className","data","username","_params$data2","email","_params$data3","alt","src","profileImg","_params$data4","height","planetImg","_params$data5","meteors","_params$data6","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","setQuickFilter","filterSize","paginationSetPageSize","Number","_createClass","_componentDidMount","_asyncToGenerator","_callee","_this2","_context","axiosConfig","get","response","console","log","_runthisfunction","_callee2","id","_context2","_x","_this3","_this$state","this","Row","sm","Col","Card","CardBody","UncontrolledDropdown","DropdownToggle","tag","ChevronDown","size","DropdownMenu","right","DropdownItem","onClick","Input","placeholder","onChange","e","target","Button","Ripple","color","exportDataAsCsv","ContextLayout","Consumer","AgGridReact","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","children","node","hidden","check","for","tagPropType","cssModule","xs","md","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","props","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","columnProp","colClass","isObject","_classNames","colSizeInterfix","mapToCssModules","classNames","classes","_extends","row","inline","disabled","FormGroup"],"mappings":"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","file":"static/js/74.eb22da9e.chunk.js","sourcesContent":["import React from \"react\"\nimport { X, Tag } from \"react-feather\"\nimport {\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  FormGroup,\n  Input,\n  Label,\n  Button\n} from \"reactstrap\"\nimport Flatpickr from \"react-flatpickr\";\n\nimport \"flatpickr/dist/themes/light.css\";\nimport \"../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\n\nconst eventColors = {\n  business: \"chip-success\",\n  work: \"chip-warning\",\n  personal: \"chip-danger\",\n  others: \"chip-primary\"\n}\nclass AddEvent extends React.Component {\n  state = {\n    startDate: new Date(),\n    endDate: new Date(),\n    title: \"\",\n    label: null,\n    allDay: true,\n    selectable: true\n  }\n  handleDateChange = date => {\n    this.setState({\n      startDate: date\n    })\n  }\n\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: date\n    })\n  }\n\n  handleLabelChange = label => {\n    this.setState({\n      label\n    })\n  }\n\n  handleAddEvent = id => {\n    this.props.handleSidebar(false)\n    this.props.addEvent({\n      id: id,\n      title: this.state.title,\n      start: this.state.startDate,\n      end: this.state.endDate,\n      label: this.state.label === null ? \"others\" : this.state.label,\n      allDay: this.state.allDay,\n      selectable: this.state.selectable\n    })\n    this.setState({\n      startDate: new Date(),\n      endDate: new Date(),\n      title: \"\",\n      label: null,\n      allDay: true,\n      selectable: true\n    })\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      title: nextProps.eventInfo === null ? \"\" : nextProps.eventInfo.title,\n      url: nextProps.eventInfo === null ? \"\" : nextProps.eventInfo.url,\n      startDate:\n        nextProps.eventInfo === null\n          ? new Date()\n          : new Date(nextProps.eventInfo.start),\n      endDate:\n        nextProps.eventInfo === null\n          ? new Date()\n          : new Date(nextProps.eventInfo.end),\n      label: nextProps.eventInfo === null ? null : nextProps.eventInfo.label,\n      allDay: nextProps.eventInfo === null ? true : nextProps.eventInfo.allDay,\n      selectable:\n        nextProps.eventInfo === null ? true : nextProps.eventInfo.selectable\n    })\n  }\n\n  render() {\n    let events = this.props.events.map(i => i.id)\n    let lastId = events.pop()\n    let newEventId = lastId + 1\n    return (\n      <div\n        className={`add-event-sidebar ${\n          this.props.sidebar ? \"show\" : \"hidden\"\n        }`}\n      >\n        <div className=\"header d-flex justify-content-between\">\n          <h3 className=\"text-bold-600 mb-0\">\n            {this.props.eventInfo !== null &&\n            this.props.eventInfo.title.length > 0\n              ? \"Update Event\"\n              : \"Add Event\"}\n          </h3>\n          <div\n            className=\"close-icon cursor-pointer\"\n            onClick={() => this.props.handleSidebar(false)}\n          >\n            <X size={20} />\n          </div>\n        </div>\n        <div className=\"add-event-body\">\n          <div className=\"category-action d-flex justify-content-between my-50\">\n            <div className=\"event-category\">\n              {this.state.label !== null ? (\n                <div className={`chip ${eventColors[this.state.label]}`}>\n                  <div className=\"chip-body\">\n                    <div className=\"chip-text text-capitalize\">\n                      {this.state.label}\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n            <div className=\"category-dropdown\">\n              <UncontrolledDropdown>\n                <DropdownToggle tag=\"div\" className=\"cursor-pointer\">\n                  <Tag size={18} />\n                </DropdownToggle>\n                <DropdownMenu tag=\"ul\" right>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"business\")}\n                  >\n                    <span className=\"bullet bullet-success bullet-sm mr-50\"></span>\n                    <span>Business</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"work\")}\n                  >\n                    <span className=\"bullet bullet-warning bullet-sm mr-50\"></span>\n                    <span>Work</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"personal\")}\n                  >\n                    <span className=\"bullet bullet-danger bullet-sm mr-50\"></span>\n                    <span>Personal</span>\n                  </DropdownItem>\n                  <DropdownItem\n                    tag=\"li\"\n                    onClick={() => this.handleLabelChange(\"others\")}\n                  >\n                    <span className=\"bullet bullet-primary bullet-sm mr-50\"></span>\n                    <span>Others</span>\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </div>\n          <div className=\"add-event-fields mt-2\">\n            <FormGroup className=\"form-label-group\">\n              <Input\n                type=\"text\"\n                id=\"EventTitle\"\n                placeholder=\"Event Title\"\n                value={this.state.title}\n                onChange={e => this.setState({ title: e.target.value })}\n              />\n              <Label for=\"EventTitle\">Event Title</Label>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"startDate\">Start Date</Label>\n              <Flatpickr\n                id=\"startDate\"\n                className=\"form-control\"\n                value={this.state.startDate}\n                onChange={date => this.handleDateChange(date)}\n                options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"Y-m-d\", }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"endDate\">End Date</Label>\n              <Flatpickr\n                id=\"endDate\"\n                className=\"form-control\"\n                value={this.state.endDate}\n                onChange={date => this.handleEndDateChange(date)}\n                options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"Y-m-d\", }}\n              />\n            </FormGroup>\n          </div>\n          <hr className=\"my-2\" />\n          <div className=\"add-event-actions text-right\">\n            <Button.Ripple\n              disabled={this.state.title.length > 0 ? false : true}\n              color=\"primary\"\n              onClick={() => {\n                this.props.handleSidebar(false)\n                if (\n                  this.props.eventInfo === null ||\n                  this.props.eventInfo.title.length <= 0\n                )\n                  this.handleAddEvent(newEventId)\n                else\n                  this.props.updateEvent({\n                    id: this.props.eventInfo.id,\n                    title: this.state.title,\n                    label: this.state.label,\n                    start: this.state.startDate,\n                    end: this.state.endDate,\n                    allDay: true,\n                    selectable: true\n                  })\n              }}\n            >\n              {this.props.eventInfo !== null &&\n              this.props.eventInfo.title.length > 0\n                ? \"Update Event\"\n                : \"Add Event\"}\n            </Button.Ripple>\n            <Button.Ripple\n              className=\"ml-1\"\n              color=\"flat-danger\"\n              onClick={() => {\n                this.props.handleSidebar(false)\n                if (this.props.handleSelectedEvent)\n                  this.props.handleSelectedEvent(null)\n                else return null\n              }}\n            >\n              Cancel\n            </Button.Ripple>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AddEvent\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../../axiosConfig\";\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../../history\";\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../../assets/scss/pages/users.scss\";\nimport { Route } from \"react-router-dom\";\n// import Calendar from \"../../calendar/Calendar\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport AddEventSidebar from \"../../calendar/AddEventSidebar\";\n\nclass LeaderBoardList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    value: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 150,\n        pinned: window.innerWidth > 992 ? \"left\" : false,\n        // filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"Name\",\n        field: \"username\",\n        filter: true,\n        width: 150,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.username}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Email\",\n        field: \"email\",\n        filter: true,\n        width: 150,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.email}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"UserImage\",\n        field: \"file\",\n        filter: true,\n        width: 150,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <img\n              alt=\"userImg\"\n              className=\" d-flex align-items-center cursor-pointer w-50 h-50 rounded\"\n              src={params.data?.profileImg}\n            />\n          );\n        },\n      },\n      {\n        headerName: \"Planet Image\",\n        field: \"planetImg\",\n        // filter: true,\n        width: 150,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <img height=\"40px\" src={params.data?.planetImg}></img>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Current Month Point\",\n        field: \"meteors\",\n        // filter: true,\n        width: 150,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.meteors}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"All Time Point\",\n        field: \"meteors\",\n        // filter: true,\n        width: 150,\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.meteors}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"creaditedAmt\",\n      //   field: \"creaditedAmt\",\n      //   // filter: true,\n      //   width: 150,\n      //   // pinned: window.innerWidth > 992 ? \"left\" : false,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\n      //         <span>{params.data?.creaditedAmt}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      //   {\n      //     headerName: \"Actions\",\n      //     field: \"sortorder\",\n      //     width: 150,\n      //     // pinned: window.innerWidth > 992 ? \"right\" : false,\n      //     cellRendererFramework: (params) => {\n      //       return (\n      //         <div className=\"actions cursor-pointer\">\n      //           <Route\n      //             render={({ history }) => (\n      //               <Edit\n      //                 className=\"mr-50\"\n      //                 size=\"25px\"\n      //                 color=\"blue\"\n      //                 onClick={() =>\n      //                   history.push(\n      //                     `/app/brahmaand/leaderboard/editLeader/${params.data._id}`\n      //                   )\n      //                 }\n      //               />\n      //             )}\n      //           />\n\n      //           <Trash2\n      //             className=\"mr-50\"\n      //             size=\"25px\"\n      //             color=\"red\"\n      //             onClick={() => {\n      //               let selectedData = this.gridApi.getSelectedRows();\n      //               this.runthisfunction(params.data._id);\n      //               this.gridApi.updateRowData({ remove: selectedData });\n      //             }}\n      //           />\n      //         </div>\n      //       );\n      //     },\n      //   },\n    ],\n  };\n\n  async componentDidMount() {\n    await axiosConfig\n      .get(\"/user/all_time_karma\", {\n        // headers: {\n        //   \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\n        // },\n      })\n      .then((response) => {\n        const rowData = response.data.data;\n        console.log(rowData);\n        this.setState({ rowData });\n      });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/dlt_startup/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <Row sm=\"12\">\n          <Col>\n            <Card>\n              <Row className=\"m-2\">\n                <Col sm=\"6\" className=\"tb\">\n                  <h1 className=\"float-left\">Leader Board List-All Time</h1>\n                </Col>\n                {/* <Col style={{ marginLeft: \"8rem\" }}>\n                                    <h5>Start Date</h5>\n                                    <Input className=\"btn btn-success\"\n                                        required\n                                        type=\"date\"\n                                        name=\"date\"\n                                        placeholder=\"Enter Date\"\n                                        value={this.state.date}\n                                        onChange={this.changeHandler}\n                                    ></Input>\n                                </Col>\n                                <Col> <h5>End Date</h5>\n                                    <Input className=\"btn btn-success\"\n                                        required\n                                        type=\"date\"\n                                        name=\"date\"\n                                        placeholder=\"Enter Date\"\n                                        value={this.state.date}\n                                        onChange={this.changeHandler}\n                                    ></Input>\n\n                                </Col> */}\n              </Row>\n\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    );\n  }\n}\nexport default LeaderBoardList;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}