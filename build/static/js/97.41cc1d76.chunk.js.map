{"version":3,"sources":["components/reactstrap/badge/BadgeSourceCode.js","components/reactstrap/badge/BadgeContextual.js","components/reactstrap/badge/BadgeIcons.js","components/reactstrap/badge/BadgeSquareIcons.js","components/reactstrap/badge/BadgeIconOnly.js","components/reactstrap/badge/BadgeLink.js","components/reactstrap/badge/BadgeBlock.js","components/reactstrap/badge/BadgeSizes.js","components/reactstrap/badge/BadgeGlow.js","components/reactstrap/badge/BadgeLight.js","components/reactstrap/badge/Badge.js","../node_modules/reactstrap/es/TabContext.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/TabContent.js","../node_modules/reactstrap/es/TabPane.js"],"names":["badgeContextual","React","createElement","className","badgeGlow","badgeLight","badgeIcons","badgeSquareIcons","badgeIconsOnly","badgeLink","badgeBlock","badgeSizes","BadgeContextual","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","activeTab","toggleTab","tab","setState","_createClass","key","value","_this2","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","Eye","size","Code","CardBody","TabContent","TabPane","tabId","Badge","color","Component","BadgeIcons","Facebook","Instagram","Twitter","GitHub","Sun","BadgeSquareIcons","BadgeIconsOnly","BadgeLink","href","Link","BadgeBlock","BadgeSizes","BadgeGlow","BadgeLight","Badges","Prism","highlightAll","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","md","TabContext","createContext","t","n","util","clone","languages","javascript","e","a","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","content","map","join","g","o","i","type","tagName","pop","push","openedBraces","r","splice","Token","hooks","add","language","tokens","_excluded","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tagPropType","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","_extends","defaultProps","any","_Component","_inheritsLoose","getDerivedStateFromProps","nextProps","prevState","prototype","render","_this$props","omit","Object","keys","Provider","activeTabId","getClasses","Consumer","_ref"],"mappings":"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","file":"static/js/97.41cc1d76.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport const badgeContextual = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeContextual extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\">Primary</Badge>\r\n      <Badge color=\"success\">Success</Badge>\r\n      <Badge color=\"info\">Info</Badge>\r\n      <Badge color=\"danger\">Danger</Badge>\r\n      <Badge color=\"warning\">Warning</Badge>\r\n      <Badge color=\"dark\">Dark</Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeContextual\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeGlow = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeGlow extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge className=\"badge-glow\" color=\"primary\">Primary</Badge>\r\n      <Badge className=\"badge-glow\" color=\"success\">Success</Badge>\r\n      <Badge className=\"badge-glow\" color=\"info\">Info</Badge>\r\n      <Badge className=\"badge-glow\" color=\"danger\">Danger</Badge>\r\n      <Badge className=\"badge-glow\" color=\"warning\">Warning</Badge>\r\n      <Badge className=\"badge-glow\" color=\"dark\">Dark</Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeGlow\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLight = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeLight extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"light-primary\">Primary</Badge>\r\n      <Badge color=\"light-success\">Success</Badge>\r\n      <Badge color=\"light-info\">Info</Badge>\r\n      <Badge color=\"light-danger\">Danger</Badge>\r\n      <Badge color=\"light-warning\">Warning</Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeLight\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeIcons = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\nimport {\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\n\r\nclass BadgeIcons extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n        <Facebook size={12} />\r\n        <span>Primary</span>\r\n      </Badge>\r\n      <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n        <Instagram size={12} />\r\n        <span>Success</span>\r\n      </Badge>\r\n      <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n        <Twitter size={12} />\r\n        <span>Info</span>\r\n      </Badge>\r\n      <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n        <GitHub size={12} />\r\n        <span>Danger</span>\r\n      </Badge>\r\n      <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n        <Sun size={12} />\r\n        <span>Warning</span>\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeSquareIcons = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\nimport {\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\nclass BadgeSquareIcons extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"mr-1 mb-1 badge-square\">\r\n        <Facebook size={12} />\r\n        <span>Primary</span>\r\n      </Badge>\r\n      <Badge color=\"success\" className=\"mr-1 mb-1 badge-square\">\r\n        <Instagram size={12} />\r\n        <span>Success</span>\r\n      </Badge>\r\n      <Badge color=\"info\" className=\"mr-1 mb-1 badge-square\">\r\n        <Twitter size={12} />\r\n        <span>Info</span>\r\n      </Badge>\r\n      <Badge color=\"danger\" className=\"mr-1 mb-1 badge-square\">\r\n        <GitHub size={12} />\r\n        <span>Danger</span>\r\n      </Badge>\r\n      <Badge color=\"warning\" className=\"mr-1 mb-1 badge-square\">\r\n        <Sun size={12} />\r\n        <span>Warning</span>\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeSquareIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeIconsOnly = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\nimport {\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\n\r\nclass BadgeIconsOnly extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n        <Facebook size={12} />\r\n      </Badge>\r\n      <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n        <Instagram size={12} />\r\n      </Badge>\r\n      <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n        <Twitter size={12} />\r\n      </Badge>\r\n      <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n        <GitHub size={12} />\r\n      </Badge>\r\n      <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n        <Sun size={12} />\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeIconsOnly\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLink = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\nimport {\r\n  Link\r\n} from \"react-feather\"\r\n\r\nclass BadgeLink extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge href=\"#\" color=\"primary\">\r\n        <Link size={12} />\r\n        Link Badge\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeLink\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeBlock = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeBlock extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"block\">\r\n        Block Badge\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeBlock\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeSizes = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Badge} from \"reactstrap\"\r\n\r\nclass BadgeSizes extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Badge color=\"primary\" className=\"badge-xl\">\r\n        <span>Extra Large</span>\r\n      </Badge>\r\n      <Badge color=\"primary\" className=\"badge-lg\">\r\n        <span>Large</span>\r\n      </Badge>\r\n      <Badge color=\"primary\" className=\"badge-md\">\r\n        <span>Medium</span>\r\n      </Badge>\r\n      <Badge color=\"primary\" className=\"badge-sm\">\r\n        <span>Small</span>\r\n      </Badge>\r\n    )\r\n  }\r\n}\r\nexport default BadgeSizes\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeContextual } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeContextual extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Contextual variations</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use attribute <code>color</code> with <code>Badge</code> tag to\r\n              create badge with diffrent colors.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n                  Primary\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n                  Success\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n                  Info\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n                  Danger\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n                  Warning\r\n                </Badge>\r\n                <Badge color=\"dark\" className=\"mr-1 mb-1\">\r\n                  Dark\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeContextual}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeContextual\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\nimport { badgeIcons } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeIcons extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Icons variations</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n                  <Facebook size={12} />\r\n                  <span>Primary</span>\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n                  <Instagram size={12} />\r\n                  <span>Success</span>\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n                  <Twitter size={12} />\r\n                  <span>Info</span>\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n                  <GitHub size={12} />\r\n                  <span>Danger</span>\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n                  <Sun size={12} />\r\n                  <span>Warning</span>\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeIcons}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeIcons\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\nimport { badgeSquareIcons } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeSquareIcons extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Square Badges</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.badge-square</code> with <code>Badge</code> tag\r\n              to create a square badge.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"mr-1 mb-1 badge-square\">\r\n                  <Facebook size={12} />\r\n                  <span>Primary</span>\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"mr-1 mb-1 badge-square\">\r\n                  <Instagram size={12} />\r\n                  <span>Success</span>\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"mr-1 mb-1 badge-square\">\r\n                  <Twitter size={12} />\r\n                  <span>Info</span>\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"mr-1 mb-1 badge-square\">\r\n                  <GitHub size={12} />\r\n                  <span>Danger</span>\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"mr-1 mb-1 badge-square\">\r\n                  <Sun size={12} />\r\n                  <span>Warning</span>\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeSquareIcons}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeSquareIcons\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  Facebook,\r\n  Instagram,\r\n  GitHub,\r\n  Twitter,\r\n  Sun\r\n} from \"react-feather\"\r\nimport { badgeIconsOnly } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeIconsOnly extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Icon Only</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"mr-1 mb-1\">\r\n                  <Facebook size={12} />\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"mr-1 mb-1\">\r\n                  <Instagram size={12} />\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"mr-1 mb-1\">\r\n                  <Twitter size={12} />\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"mr-1 mb-1\">\r\n                  <GitHub size={12} />\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"mr-1 mb-1\">\r\n                  <Sun size={12} />\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeIconsOnly}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeIconsOnly\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, Link } from \"react-feather\"\r\nimport { badgeLink } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeLink extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Link Badge</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use <code>href=\"#\"</code> attribute to use badge as a link.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\" className=\"d-flex justify-content-center\">\r\n                <Badge color=\"primary\" href=\"#\" className=\"mr-1 mb-1\">\r\n                  <Link size={12} />\r\n                  <span>Link Badge</span>\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeLink}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeLink\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeBlock } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeBlock extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Block Badge</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use <code>.block</code> class to make badge display as block.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane\r\n                tabId=\"1\"\r\n                className=\"w-100 d-flex justify-content-center\"\r\n              >\r\n                <Badge color=\"primary\" className=\"block\">\r\n                  <span>Block Badge</span>\r\n                </Badge>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {badgeBlock}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeBlock\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeSizes } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeSizes extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Sizes</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use <code>.badge-[sm/md/lg/xl]</code> class to change badge size.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"badge-xl mr-1 mb-1\">\r\n                  <span>Extra Large</span>\r\n                </Badge>\r\n                <Badge color=\"primary\" className=\"badge-lg mr-1 mb-1\">\r\n                  <span>Large</span>\r\n                </Badge>\r\n                <Badge color=\"primary\" className=\"badge-md mr-1 mb-1\">\r\n                  <span>Medium</span>\r\n                </Badge>\r\n                <Badge color=\"primary\" className=\"badge-sm mr-1 mb-1\">\r\n                  <span>Small</span>\r\n                </Badge>\r\n              </TabPane>\r\n               <TabPane className=\"component-code\" tabId=\"2\">{badgeSizes}</TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeSizes\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeGlow } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeGlow extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Badge Glow</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}>\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}>\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>badge-glow</code> with <code>Badge</code> tag to\r\n              add glow effect to your badge\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"primary\" className=\"badge-glow mr-1 mb-1\">\r\n                  Primary\r\n                </Badge>\r\n                <Badge color=\"success\" className=\"badge-glow mr-1 mb-1\">\r\n                  Success\r\n                </Badge>\r\n                <Badge color=\"info\" className=\"badge-glow mr-1 mb-1\">\r\n                  Info\r\n                </Badge>\r\n                <Badge color=\"danger\" className=\"badge-glow mr-1 mb-1\">\r\n                  Danger\r\n                </Badge>\r\n                <Badge color=\"warning\" className=\"badge-glow mr-1 mb-1\">\r\n                  Warning\r\n                </Badge>\r\n                <Badge color=\"dark\" className=\"badge-glow mb-1\">\r\n                  Dark\r\n                </Badge>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {badgeGlow}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeGlow\r\n","import React from \"react\"\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { badgeLight } from \"./BadgeSourceCode\"\r\n\r\nclass BadgeLight extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Light Badges</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}>\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}>\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use attribute <code>color=\"light-COLOR_NAME\"</code> with{\" \"}\r\n              <code>Badge</code> tag to create badge with diffrent colors.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Badge color=\"light-primary\" className=\"badge-glow mr-1 mb-1\">\r\n                  Primary\r\n                </Badge>\r\n                <Badge color=\"light-success\" className=\"badge-glow mr-1 mb-1\">\r\n                  Success\r\n                </Badge>\r\n                <Badge color=\"light-info\" className=\"badge-glow mr-1 mb-1\">\r\n                  Info\r\n                </Badge>\r\n                <Badge color=\"light-danger\" className=\"badge-glow mr-1 mb-1\">\r\n                  Danger\r\n                </Badge>\r\n                <Badge color=\"light-warning\" className=\"badge-glow mr-1 mb-1\">\r\n                  Warning\r\n                </Badge>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {badgeLight}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default BadgeLight\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport BadgeContextual from \"./BadgeContextual\"\r\nimport BadgeIcons from \"./BadgeIcons\"\r\nimport BadgeSquareIcons from \"./BadgeSquareIcons\"\r\nimport BadgeIconsOnly from \"./BadgeIconOnly\"\r\nimport BadgeLink from \"./BadgeLink\"\r\nimport BadgeBlock from \"./BadgeBlock\"\r\nimport BadgeSizes from \"./BadgeSizes\"\r\nimport BadgeGlow from \"./BadgeGlow\"\r\nimport BadgeLight from \"./BadgeLight\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Badges extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Badges\"\r\n          breadCrumbParent=\"Components\"\r\n          breadCrumbActive=\"Badges\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <BadgeContextual />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeGlow />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeLight />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeIcons />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeSquareIcons />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <BadgeIconsOnly />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <BadgeLink />\r\n          </Col>\r\n          <Col md=\"6\" sm=\"12\">\r\n            <BadgeBlock />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <BadgeSizes />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Badges\r\n","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = /*#__PURE__*/React.createContext({});","!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return /*#__PURE__*/React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabId\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return /*#__PURE__*/React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;"],"sourceRoot":""}