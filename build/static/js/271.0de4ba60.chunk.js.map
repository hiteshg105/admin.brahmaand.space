{"version":3,"sources":["views/tables/aggrid/Aggrid.js"],"names":["AggridTable","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","filter","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","pinned","window","innerWidth","onGridReady","params","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","_createClass","key","value","_this2","axios","get","then","response","data","JSON","stringify","_this3","_this$state","this","React","createElement","Fragment","Breadcrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Card","className","CardBody","UncontrolledDropdown","DropdownToggle","tag","ChevronDown","size","DropdownMenu","right","DropdownItem","onClick","Input","placeholder","onChange","e","target","Button","Ripple","color","exportDataAsCsv","ContextLayout","Consumer","context","AgGridReact","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","Component"],"mappings":"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","file":"static/js/271.0de4ba60.chunk.js","sourcesContent":["import React from \"react\"\nimport {\n  Card,\n  CardBody,\n  Input,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from \"reactstrap\"\nimport { AgGridReact } from \"ag-grid-react\"\nimport { ContextLayout } from \"../../../utility/context/Layout\"\nimport { ChevronDown } from \"react-feather\"\nimport axios from \"axios\"\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\"\n\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\n\nclass AggridTable extends React.Component {\n  state = {\n    rowData: null,\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true\n    },\n    columnDefs: [\n      {\n        headerName: \"First Name\",\n        field: \"firstname\",\n        width: 175,\n        filter: true,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true\n      },\n      {\n        headerName: \"Last Name\",\n        field: \"lastname\",\n        filter: true,\n        width: 175\n      },\n      {\n        headerName: \"Email\",\n        field: \"email\",\n        filter: true,\n        width: 250,\n        pinned: window.innerWidth > 992 ? \"left\" : false\n      },\n      {\n        headerName: \"Company\",\n        field: \"company\",\n        filter: true,\n        width: 250\n      },\n      {\n        headerName: \"City\",\n        field: \"city\",\n        filter: true,\n        width: 150\n      },\n      {\n        headerName: \"Country\",\n        field: \"country\",\n        filter: true,\n        width: 150\n      },\n      {\n        headerName: \"State\",\n        field: \"state\",\n        filter: true,\n        width: 125\n      },\n      {\n        headerName: \"Zip\",\n        field: \"zip\",\n        filter: \"agNumberColumnFilter\",\n        width: 140\n      },\n      {\n        headerName: \"Followers\",\n        field: \"followers\",\n        filter: \"agNumberColumnFilter\",\n        width: 140\n      }\n    ]\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/aggrid/data\").then(response => {\n      let rowData = response.data.data\n      JSON.stringify(rowData)\n      this.setState({ rowData })\n    })\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api\n    this.gridColumnApi = params.columnApi\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages()\n    })\n  }\n\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val)\n  }\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val))\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val\n      })\n    }\n  }\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Aggrid Table\"\n          breadCrumbParent=\"Forms & Tables\"\n          breadCrumbActive=\"Aggrid Table\"\n        />\n        <Card className=\"overflow-hidden agGrid-card\">\n          <CardBody className=\"py-0\">\n            {this.state.rowData === null ? null : (\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                  <div className=\"mb-1\">\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                      <DropdownToggle tag=\"div\">\n                        {this.gridApi\n                          ? this.state.currenPageSize\n                          : \"\" * this.state.getPageSize -\n                            (this.state.getPageSize - 1)}{\" \"}\n                        -{\" \"}\n                        {this.state.rowData.length -\n                          this.state.currenPageSize * this.state.getPageSize >\n                        0\n                          ? this.state.currenPageSize * this.state.getPageSize\n                          : this.state.rowData.length}{\" \"}\n                        of {this.state.rowData.length}\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(134)}\n                        >\n                          134\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                    <div className=\"table-input mr-1\">\n                      <Input\n                        placeholder=\"search...\"\n                        onChange={e => this.updateSearchQuery(e.target.value)}\n                        value={this.state.value}\n                      />\n                    </div>\n                    <div className=\"export-btn\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        onClick={() => this.gridApi.exportDataAsCsv()}\n                      >\n                        Export as CSV\n                      </Button.Ripple>\n                    </div>\n                  </div>\n                </div>\n                <ContextLayout.Consumer>\n                  {context => (\n                    <AgGridReact\n                      gridOptions={{}}\n                      rowSelection=\"multiple\"\n                      defaultColDef={defaultColDef}\n                      columnDefs={columnDefs}\n                      rowData={rowData}\n                      onGridReady={this.onGridReady}\n                      colResizeDefault={\"shift\"}\n                      animateRows={true}\n                      floatingFilter={true}\n                      pagination={true}\n                      paginationPageSize={this.state.paginationPageSize}\n                      pivotPanelShow=\"always\"\n                      enableRtl={context.state.direction === \"rtl\"}\n                    />\n                  )}\n                </ContextLayout.Consumer>\n              </div>\n            )}\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    )\n  }\n}\nexport default AggridTable\n"],"sourceRoot":""}