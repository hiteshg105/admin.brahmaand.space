{"version":3,"sources":["extensions/treeview/Filter.js","extensions/treeview/NodeViewer.js","extensions/treeview/Data.js","extensions/treeview/Styles.js","extensions/treeview/TreeView.js","extensions/extensionsHeader.js"],"names":["defaultMatcher","filterText","node","name","toLowerCase","indexOf","findNode","filter","matcher","children","length","find","child","filterTree","arguments","undefined","filtered","map","Object","assign","expandFilteredNodes","toggled","childrenWithMatches","shouldExpand","NodeViewer","_ref","json","JSON","stringify","React","createElement","className","data","id","loading","styleLight","tree","base","listStyle","backgroundColor","margin","padding","color","fontSize","position","link","cursor","display","activeLink","background","toggle","verticalAlign","marginLeft","height","width","wrapper","top","left","arrow","fill","strokeWidth","header","connector","borderLeft","borderBottom","title","lineHeight","subtree","paddingLeft","styleDark","Loading","props","style","Spinner","size","TreeView","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","apply","concat","state","onToggle","_this$state","setState","active","onFilterMouseUp","target","value","trim","filters","_createClass","key","Prism","highlightAll","_this$state2","this","decorators","Fragment","ExtensionsHeader","subTitle","Row","Col","sm","Card","CardHeader","CardTitle","CardBody","xl","lg","type","onKeyUp","Treebeard","theme","animations","Component","connect","customizer","data-tour","href","rel"],"mappings":"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","file":"static/js/208.c25aeb15.chunk.js","sourcesContent":["// Helper functions for filtering\nexport const defaultMatcher = (filterText, node) => {\n  return node.name.toLowerCase().indexOf(filterText.toLowerCase()) !== -1\n}\n\nexport const findNode = (node, filter, matcher) => {\n  return (\n    matcher(filter, node) || // i match\n    (node.children && // or i have decendents and one of them match\n      node.children.length &&\n      !!node.children.find(child => findNode(child, filter, matcher)))\n  )\n}\n\nexport const filterTree = (node, filter, matcher = defaultMatcher) => {\n  // If im an exact match then all my children get to stay\n  if (matcher(filter, node) || !node.children) {\n    return node\n  }\n  // If not then only keep the ones that match or have matching descendants\n  const filtered = node.children\n    .filter(child => findNode(child, filter, matcher))\n    .map(child => filterTree(child, filter, matcher))\n  return Object.assign({}, node, { children: filtered })\n}\n\nexport const expandFilteredNodes = (node, filter, matcher = defaultMatcher) => {\n  let children = node.children\n  if (!children || children.length === 0) {\n    return Object.assign({}, node, { toggled: false })\n  }\n  const childrenWithMatches = node.children.filter(child =>\n    findNode(child, filter, matcher)\n  )\n  const shouldExpand = childrenWithMatches.length > 0\n  // If im going to expand, go through all the matches and see if thier children need to expand\n  if (shouldExpand) {\n    children = childrenWithMatches.map(child => {\n      return expandFilteredNodes(child, filter, matcher)\n    })\n  }\n  return Object.assign({}, node, {\n    children: children,\n    toggled: shouldExpand\n  })\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n// eslint-disable-next-line\nimport prism from \"prismjs\"\n\nconst HELP_MSG = \"Select A Node To See Its Data Structure Here...\"\n\nconst NodeViewer = ({ node }) => {\n  let json = JSON.stringify(node, null, 4)\n  if (!json) {\n    json = HELP_MSG\n  }\n\n  return (\n    <pre className=\"mt-0\">\n      <code className=\"language-json\">{json}</code>\n    </pre>\n  )\n}\nNodeViewer.propTypes = {\n  node: PropTypes.object\n}\n\nexport default NodeViewer\n","export const data = {\n  name: \"react-treebeard\",\n  id: 1,\n  toggled: true,\n  children: [\n    {\n      name: \"example\",\n      children: [\n        { name: \"app.js\" },\n        { name: \"data.js\" },\n        { name: \"index.html\" },\n        { name: \"styles.js\" },\n        { name: \"webpack.config.js\" }\n      ]\n    },\n    {\n      name: \"node_modules\",\n      loading: true,\n      children: []\n    },\n    {\n      name: \"src\",\n      children: [\n        {\n          name: \"components\",\n          children: [{ name: \"decorators.js\" }, { name: \"treebeard.js\" }]\n        },\n        { name: \"index.js\" }\n      ]\n    },\n    {\n      name: \"themes\",\n      children: [{ name: \"animations.js\" }, { name: \"default.js\" }]\n    },\n    { name: \"gulpfile.js\" },\n    { name: \"index.js\" },\n    { name: \"package.json\" }\n  ]\n}\n","export const styleLight = {\n  tree: {\n    base: {\n      listStyle: \"none\",\n      backgroundColor: \"#fff\",\n      margin: 0,\n      padding: 0,\n      color: \"#000\",\n      fontSize: \"14px\"\n    },\n    node: {\n      base: {\n        position: \"relative\"\n      },\n      link: {\n        cursor: \"pointer\",\n        position: \"relative\",\n        padding: \"0px 5px\",\n        display: \"block\"\n      },\n      activeLink: {\n        background: \"#f8f8f8\"\n      },\n      toggle: {\n        base: {\n          position: \"relative\",\n          display: \"inline-block\",\n          verticalAlign: \"top\",\n          marginLeft: \"-5px\",\n          height: \"24px\",\n          width: \"24px\"\n        },\n        wrapper: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          margin: \"-10px 0 0 -7px\",\n          height: \"14px\"\n        },\n        height: 10,\n        width: 10,\n        display: \"inline-block\",\n        arrow: {\n          fill: \"#565656\",\n          strokeWidth: 0\n        }\n      },\n      header: {\n        base: {\n          display: \"inline-block\",\n          verticalAlign: \"top\",\n          color: \"#565656\"\n        },\n        connector: {\n          width: \"2px\",\n          height: \"12px\",\n          borderLeft: \"solid 2px black\",\n          borderBottom: \"solid 2px black\",\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"-21px\"\n        },\n        title: {\n          lineHeight: \"24px\",\n          verticalAlign: \"middle\"\n        }\n      },\n      subtree: {\n        listStyle: \"none\",\n        paddingLeft: \"19px\"\n      },\n      loading: {\n        color: \"#7367f0\"\n      }\n    }\n  }\n}\n\nexport const styleDark = {\n  tree: {\n    base: {\n      listStyle: \"none\",\n      backgroundColor: \"#262c49\",\n      margin: 0,\n      padding: 0,\n      color: \"#c2c6dc\",\n      fontSize: \"14px\"\n    },\n    node: {\n      base: {\n        position: \"relative\"\n      },\n      link: {\n        cursor: \"pointer\",\n        position: \"relative\",\n        padding: \"0px 5px\",\n        display: \"block\"\n      },\n      activeLink: {\n        background: \"#10163a\"\n      },\n      toggle: {\n        base: {\n          position: \"relative\",\n          display: \"inline-block\",\n          verticalAlign: \"top\",\n          marginLeft: \"-5px\",\n          height: \"24px\",\n          width: \"24px\"\n        },\n        wrapper: {\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          margin: \"-10px 0 0 -7px\",\n          height: \"14px\"\n        },\n        height: 10,\n        width: 10,\n        display: \"inline-block\",\n        arrow: {\n          fill: \"#fff\",\n          strokeWidth: 0\n        }\n      },\n      header: {\n        base: {\n          display: \"inline-block\",\n          verticalAlign: \"top\",\n          color: \"#fff\"\n        },\n        connector: {\n          width: \"2px\",\n          height: \"12px\",\n          borderLeft: \"solid 2px black\",\n          borderBottom: \"solid 2px black\",\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"-21px\"\n        },\n        title: {\n          lineHeight: \"24px\",\n          verticalAlign: \"middle\"\n        }\n      },\n      subtree: {\n        listStyle: \"none\",\n        paddingLeft: \"19px\"\n      },\n      loading: {\n        color: \"#7367f0\"\n      }\n    }\n  }\n}\n","import React from \"react\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Spinner\n} from \"reactstrap\"\nimport { Treebeard, decorators } from \"react-treebeard\"\nimport Prism from \"prismjs\"\nimport { connect } from \"react-redux\"\nimport * as filters from \"./Filter\"\nimport NodeViewer from \"./NodeViewer\"\nimport { data } from \"./Data\"\nimport { styleLight, styleDark } from \"./Styles\"\nconst Loading = props => {\n  return (\n    <div style={props.style.wrapper}>\n      <Spinner size=\"sm\" color=\"primary\" style={props.style.arrow} />\n    </div>\n  )\n}\n\nclass TreeView extends React.Component {\n  state = {\n    data\n  }\n\n  componentDidMount() {\n    Prism.highlightAll()\n  }\n\n  onToggle = (node, toggled) => {\n    const { cursor, data } = this.state\n\n    if (cursor) {\n      this.setState(() => ({ cursor, active: false }))\n    }\n\n    node.active = !node.active\n    if (node.children) {\n      node.toggled = toggled\n    }\n    this.setState(() => ({ cursor: node, data: Object.assign({}, data) }))\n  }\n\n  onFilterMouseUp = ({ target: { value } }) => {\n    const filter = value.trim()\n    if (!filter) {\n      return this.setState(() => ({ data }))\n    }\n    let filtered = filters.filterTree(data, filter)\n    filtered = filters.expandFilteredNodes(filtered, filter)\n    this.setState(() => ({ data: filtered }))\n  }\n\n  render() {\n    const { data, cursor } = this.state\n    decorators.Loading = Loading\n\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"React Treebeard\"\n          subTitle=\"Data-Driven, Fast, Efficient and Customisable tree view component. \"\n          link=\"https://github.com/storybookjs/react-treebeard\"\n        />\n        <Row>\n          <Col sm=\"12\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Default</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col xl=\"6\" lg=\"12\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control mb-1\"\n                      onKeyUp={this.onFilterMouseUp}\n                    />\n                    <Treebeard\n                      data={data}\n                      onToggle={this.onToggle}\n                      style={\n                        this.props.theme === \"light\" ||\n                        this.props.theme === \"semi-dark\"\n                          ? styleLight\n                          : styleDark\n                      }\n                      decorators={decorators}\n                      animations={false}\n                    />\n                  </Col>\n                  <Col xl=\"6\" lg=\"12\" className=\"mt-2 mt-xl-0\">\n                    <NodeViewer node={cursor} />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    theme: state.customizer.customizer.theme\n  }\n}\n\nexport default connect(mapStateToProps)(TreeView)\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\n// import { Star } from \"react-feather\"\n\nclass ExtensionsHeader extends React.Component {\n  render() {\n    return (\n      <Row className=\"mb-2\">\n        <Col sm=\"12\" className=\"ml-50\">\n          <p\n            className=\"font-medium-5 mt-1 extension-title\"\n            data-tour=\"extension-title\"\n          >\n            {this.props.title}\n          </p>\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.subTitle}\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \n          }\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default ExtensionsHeader\n"],"sourceRoot":""}