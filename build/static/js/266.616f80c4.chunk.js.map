{"version":3,"sources":["views/apps/setting/EnquiryForm.js"],"names":["EnquiryForm","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","filter","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","pinned","window","innerWidth","cellRendererFramework","params","React","createElement","className","Eye","size","color","Edit","Trash2","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","data","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","_createClass","key","value","_this2","axios","get","then","response","JSON","stringify","_this3","_this$state","this","Fragment","Breadcrumbs","breadCrumbTitle","Card","CardBody","UncontrolledDropdown","DropdownToggle","tag","ChevronDown","DropdownMenu","right","DropdownItem","Input","placeholder","onChange","e","target","Button","Ripple","exportDataAsCsv","ContextLayout","Consumer","context","AgGridReact","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","Component"],"mappings":"mXAmBMA,EAAW,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAkJb,OAlJaP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACfM,MAAQ,CACNC,QAAS,KACTC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAEhBC,WAAY,CACV,CACEC,WAAY,aACZC,MAAO,SACPC,MAAO,IACPC,QAAQ,EACRC,mBAAmB,EACnBC,qCAAqC,EACrCC,yBAAyB,GAE3B,CACEN,WAAY,OACZC,MAAO,YACPE,QAAQ,EACRD,MAAO,IACPK,OAAQC,OAAOC,WAAa,KAAM,QAEpC,CACET,WAAY,QACZC,MAAO,QACPE,QAAQ,EACRD,MAAO,IACPK,OAAQC,OAAOC,WAAa,KAAM,QAEpC,CACET,WAAY,mBACZC,MAAO,WACPE,QAAQ,EACRD,MAAO,KAsCT,CACEF,WAAY,UACZC,MAAO,YACPC,MAAO,IACPQ,sBAAuB,SAACC,GACtB,OACEC,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAACE,IAAG,CACFD,UAAU,QACVE,KAAK,OACLC,MAAM,UAKRL,IAAAC,cAACK,IAAI,CACHJ,UAAU,QACVE,KAAK,OACLC,MAAM,SAGRL,IAAAC,cAACM,IAAM,CACLL,UAAU,QACVE,KAAK,OACLC,MAAM,MACNG,QAAS,WACP,IAAIC,EAAe3C,EAAK4C,QAAQC,kBAChC7C,EAAK8C,gBAAgBb,EAAOc,KAAKC,KACjChD,EAAK4C,QAAQK,cAAc,CAAEC,OAAQP,YAQpD3C,EAUDmD,YAAc,SAAClB,GACbjC,EAAK4C,QAAUX,EAAOmB,IACtBpD,EAAKqD,cAAgBpB,EAAOqB,UAC5BtD,EAAKuD,SAAS,CACZzC,eAAgBd,EAAK4C,QAAQY,2BAA6B,EAC1DzC,YAAaf,EAAK4C,QAAQa,wBAC1BC,WAAY1D,EAAK4C,QAAQe,6BAE5B3D,EAED4D,kBAAoB,SAACC,GACnB7D,EAAK4C,QAAQkB,eAAeD,IAC7B7D,EAED+D,WAAa,SAACF,GACR7D,EAAK4C,UACP5C,EAAK4C,QAAQoB,sBAAsBC,OAAOJ,IAC1C7D,EAAKuD,SAAS,CACZzC,eAAgB+C,EAChB9C,YAAa8C,MAGlB7D,EAuGA,OAvGAkE,YAAAvE,EAAA,EAAAwE,IAAA,oBAAAC,MA9BD,WAAqB,IAADC,EAAA,KAClBC,IAAMC,IAAI,oBAAoBC,MAAK,SAACC,GAClC,IAAI7D,EAAU6D,EAAS1B,KAAKA,KAC5B2B,KAAKC,UAAU/D,GACfyD,EAAKd,SAAS,CAAE3C,iBAEnB,CAAAuD,IAAA,SAAAC,MA0BD,WAAU,IAADQ,EAAA,KACPC,EAA+CC,KAAKnE,MAA5CC,EAAOiE,EAAPjE,QAASS,EAAUwD,EAAVxD,WAAYL,EAAa6D,EAAb7D,cAC7B,OACEkB,IAAAC,cAACD,IAAM6C,SAAQ,KACb7C,IAAAC,cAAC6C,IAAW,CACVC,gBAAgB,cAIlB/C,IAAAC,cAAC+C,IAAI,CAAC9C,UAAU,+BACdF,IAAAC,cAACgD,IAAQ,CAAC/C,UAAU,QACM,OAAvB0C,KAAKnE,MAAMC,QAAmB,KAC7BsB,IAAAC,cAAA,OAAKC,UAAU,8CACbF,IAAAC,cAAA,OAAKC,UAAU,+DACbF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAACiD,IAAoB,CAAChD,UAAU,mBAC9BF,IAAAC,cAACkD,IAAc,CAACC,IAAI,OACjBR,KAAKlC,QACFkC,KAAKnE,MAAMG,eACX,GAAKgE,KAAKnE,MAAMI,aACf+D,KAAKnE,MAAMI,YAAc,GAAI,IAAI,IACpC,IACD+D,KAAKnE,MAAMC,QAAQR,OAClB0E,KAAKnE,MAAMG,eAAiBgE,KAAKnE,MAAMI,YACzC,EACI+D,KAAKnE,MAAMG,eAAiBgE,KAAKnE,MAAMI,YACvC+D,KAAKnE,MAAMC,QAAQR,OAAQ,IAAI,MAC/B0E,KAAKnE,MAAMC,QAAQR,OACvB8B,IAAAC,cAACoD,IAAW,CAACnD,UAAU,QAAQE,KAAM,MAEvCJ,IAAAC,cAACqD,IAAY,CAACC,OAAK,GACjBvD,IAAAC,cAACuD,IAAY,CACXJ,IAAI,MACJ5C,QAAS,kBAAMkC,EAAKb,WAAW,MAChC,MAGD7B,IAAAC,cAACuD,IAAY,CACXJ,IAAI,MACJ5C,QAAS,kBAAMkC,EAAKb,WAAW,MAChC,MAGD7B,IAAAC,cAACuD,IAAY,CACXJ,IAAI,MACJ5C,QAAS,kBAAMkC,EAAKb,WAAW,OAChC,OAGD7B,IAAAC,cAACuD,IAAY,CACXJ,IAAI,MACJ5C,QAAS,kBAAMkC,EAAKb,WAAW,OAChC,UAMP7B,IAAAC,cAAA,OAAKC,UAAU,iDACbF,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAACwD,IAAK,CACJC,YAAY,YACZC,SAAU,SAACC,GAAC,OAAKlB,EAAKhB,kBAAkBkC,EAAEC,OAAO3B,QACjDA,MAAOU,KAAKnE,MAAMyD,SAGtBlC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAC6D,IAAOC,OAAM,CACZ1D,MAAM,UACNG,QAAS,kBAAMkC,EAAKhC,QAAQsD,oBAC7B,oBAMPhE,IAAAC,cAACgE,IAAcC,SAAQ,MACpB,SAACC,GAAO,OACPnE,IAAAC,cAACmE,cAAW,CACVC,YAAa,GACbC,aAAa,WACbxF,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTuC,YAAayB,EAAKzB,YAClBsD,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZ/F,mBAAoB+D,EAAKjE,MAAME,mBAC/BgG,eAAe,SACfC,UAAuC,QAA5BT,EAAQ1F,MAAMoG,uBAU5CpH,EAzPc,CAASuC,IAAM8E,WA2PjBrH","file":"static/js/266.616f80c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Trash2, Eye, Edit } from \"react-feather\";\r\nimport axios from \"axios\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// import { history } from \"../../../history\";\r\n\r\nclass EnquiryForm extends React.Component {\r\n  state = {\r\n    rowData: null,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"Mobile No.\",\r\n        field: \"Mobile\",\r\n        width: 175,\r\n        filter: false,\r\n        checkboxSelection: false,\r\n        headerCheckboxSelectionFilteredOnly: false,\r\n        headerCheckboxSelection: false,\r\n      },\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"firstname\",\r\n        filter: false,\r\n        width: 250,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"email\",\r\n        filter: false,\r\n        width: 250,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n      },\r\n      {\r\n        headerName: \"Customer Enquiry\",\r\n        field: \"Customer\",\r\n        filter: false,\r\n        width: 250,\r\n      },\r\n      // {\r\n      //   headerName: \"City\",\r\n      //   field: \"city\",\r\n      //   filter: false,\r\n      //   width: 150,\r\n      // },\r\n      // {\r\n      //   headerName: \"Country\",\r\n      //   field: \"country\",\r\n      //   filter: false,\r\n      //   width: 150,\r\n      // },\r\n      // {\r\n      //   headerName: \"State\",\r\n      //   field: \"state\",\r\n      //   filter: false,\r\n      //   width: 125,\r\n      // },\r\n      // {\r\n      //   headerName: \"Zip\",\r\n      //   field: \"zip\",\r\n      //   filter: \"agNumberColumnFilter\",\r\n      //   width: 140,\r\n      // },\r\n      // {\r\n      //   headerName: \"Mobille No.\",\r\n      //   field: \"number\",\r\n      //   filter: \"agNumberColumnFilter\",\r\n      //   width: 140,\r\n      // },\r\n      // {\r\n      //   headerName: \"Subscription Plan Name\",\r\n      //   field: \"Subscription Plan Name\",\r\n      //   filter: \"agNumberColumnFilter\",\r\n      //   width: 140,\r\n      // },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"green\"\r\n                // onClick={() =>\r\n                //   history.push(\"/app/shiftManagement/shiftDealerTable\")\r\n                // }\r\n              />\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                // onClick={() => history.push(\"/app/slider/editSlider/${params.data._id}\")}\r\n              />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/api/aggrid/data\").then((response) => {\r\n      let rowData = response.data.data;\r\n      JSON.stringify(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Help Desk\"\r\n          // breadCrumbParent=\"Forms & Tables\"\r\n          // breadCrumbActive=\"Shift Management\"\r\n        />\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={(e) => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {(context) => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={true}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default EnquiryForm;\r\n"],"sourceRoot":""}