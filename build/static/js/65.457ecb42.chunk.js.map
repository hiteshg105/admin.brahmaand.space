{"version":3,"sources":["extensions/import-export/Import.js","extensions/extensionsHeader.js"],"names":["Uploader","props","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","reader","FileReader","onload","fileData","result","wb","XLSX","read","type","SheetNames","forEach","sheetName","rowObj","utils","sheet_to_row_object_array","Sheets","getTableData","name","length","readAsBinaryString","toast","error","getRootProps","getInputProps","React","createElement","className","DownloadCloud","size","Import","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","concat","state","tableData","filteredData","value","arr","setState","handleFilter","e","data","target","filter","col","keys","Object","startsWithCondition","key","toString","toLowerCase","startsWith","includesCondition","includes","_createClass","_this2","headArr","this","map","index","_toConsumableArray","dataArr","renderTableBody","renderTd","renderTableHead","head","Fragment","ExtensionsHeader","title","subTitle","link","Row","Col","sm","Card","CardBody","CardHeader","CardTitle","Input","onChange","Search","Table","responsive","ToastContainer","Component","data-tour","href","rel"],"mappings":"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","file":"static/js/65.457ecb42.chunk.js","sourcesContent":["import React from \"react\"\nimport ExtensionsHeader from \"../extensionsHeader\"\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Table,\n  CardHeader,\n  CardTitle,\n  Input\n} from \"reactstrap\"\nimport XLSX from \"xlsx\"\nimport { DownloadCloud, Search } from \"react-feather\"\nimport { useDropzone } from \"react-dropzone\"\nimport { toast, ToastContainer } from \"react-toastify\"\n\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"../../assets/scss/plugins/extensions/toastr.scss\"\nimport \"../../assets/scss/plugins/extensions/dropzone.scss\"\n\nfunction Uploader(props) {\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \".xlsx, .xls, .csv\",\n    onDrop: acceptedFiles => {\n      var reader = new FileReader()\n      reader.onload = function() {\n        var fileData = reader.result\n        var wb = XLSX.read(fileData, { type: \"binary\" })\n\n        wb.SheetNames.forEach(function(sheetName) {\n          var rowObj = XLSX.utils.sheet_to_row_object_array(\n            wb.Sheets[sheetName]\n          )\n          props.getTableData(rowObj, acceptedFiles[0].name)\n        })\n      }\n      if (acceptedFiles.length) {\n        reader.readAsBinaryString(acceptedFiles[0])\n      } else {\n        toast.error(\"You can only upload .xlsx, .xls, .csv Files!\")\n      }\n    }\n  })\n  return (\n    <section className=\"pb-1\">\n      <div {...getRootProps({ className: \"dropzone py-3 flex-column\" })}>\n        <input {...getInputProps()} />\n        <DownloadCloud className=\"text-light\" size={50} />\n        <h4 className=\"mb-0 mt-2\">Drop Excel File or Browse</h4>\n      </div>\n    </section>\n  )\n}\n\nclass Import extends React.Component {\n  state = {\n    tableData: [],\n    filteredData: [],\n    value: \"\",\n    name: \"\"\n  }\n\n  getTableData = (arr, name) => {\n    this.setState({ tableData: arr, name })\n  }\n\n  handleFilter = e => {\n    let data = this.state.tableData\n    let filteredData = []\n    let value = e.target.value\n    this.setState({ value })\n\n    if (value.length) {\n      filteredData = data.filter(col => {\n        let keys = Object.keys(col)\n\n        let startsWithCondition = keys.filter(key => {\n          return col[key]\n            .toString()\n            .toLowerCase()\n            .startsWith(value.toLowerCase())\n        })\n\n        let includesCondition = keys.filter(key =>\n          col[key]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        )\n\n        if (startsWithCondition.length) return col[startsWithCondition]\n        else if (!startsWithCondition && includesCondition.length)\n          return col[includesCondition]\n        else return null\n      })\n      this.setState({ value, filteredData })\n    } else {\n      return null\n    }\n  }\n\n  render() {\n    let headArr = this.state.tableData.length\n      ? this.state.tableData.map((col, index) => {\n          if (index === 0) return [...Object.keys(col)]\n          else return null\n        })\n      : []\n    let dataArr = this.state.value.length\n      ? this.state.filteredData\n      : this.state.tableData.length && !this.state.value.length\n      ? this.state.tableData\n      : null\n    let renderTableBody =\n      dataArr !== null && dataArr.length\n        ? dataArr.map((col, index) => {\n            let keys = Object.keys(col)\n            let renderTd = keys.map((key, index) => (\n              <td key={index}>{col[key]}</td>\n            ))\n            return <tr key={index}>{renderTd}</tr>\n          })\n        : null\n\n    let renderTableHead = headArr.length\n      ? headArr[0].map((head, index) => {\n          return <th key={index}>{head}</th>\n        })\n      : null\n\n    return (\n      <React.Fragment>\n        <ExtensionsHeader\n          title=\"XLSX\"\n          subTitle=\"Xlsx is a parser and writer for various spreadsheet formats\"\n          link=\"https://github.com/AdeleD/react-paginate\"\n        />\n        <Row className=\"import-component\">\n          <Col sm=\"12\">\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col sm=\"12\">\n                    <Uploader getTableData={this.getTableData} />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Col>\n          {this.state.tableData.length ? (\n            <Col sm=\"12\">\n              <Card>\n                <CardHeader className=\"justify-content-between flex-wrap\">\n                  <CardTitle>{this.state.name}</CardTitle>\n                  <div className=\"filter position-relative has-icon-left\">\n                    <Input\n                      type=\"text\"\n                      value={this.state.value}\n                      onChange={e => this.handleFilter(e)}\n                    />\n                    <div className=\"form-control-position\">\n                      <Search size={15} />\n                    </div>\n                  </div>\n                </CardHeader>\n                <CardBody>\n                  <Table className=\"table-hover-animation\" responsive>\n                    <thead>\n                      <tr>{renderTableHead}</tr>\n                    </thead>\n                    <tbody>{renderTableBody}</tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          ) : null}\n          <ToastContainer />\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Import\n","import React from \"react\"\nimport { Row, Col } from \"reactstrap\"\n// import { Star } from \"react-feather\"\n\nclass ExtensionsHeader extends React.Component {\n  render() {\n    return (\n      <Row className=\"mb-2\">\n        <Col sm=\"12\" className=\"ml-50\">\n          <p\n            className=\"font-medium-5 mt-1 extension-title\"\n            data-tour=\"extension-title\"\n          >\n            {this.props.title}\n          </p>\n          {this.props.link ? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.props.subTitle}\n          </a> : <p className=\"text-primary\">{this.props.subTitle}</p> \n          }\n        </Col>\n      </Row>\n    )\n  }\n}\nexport default ExtensionsHeader\n"],"sourceRoot":""}