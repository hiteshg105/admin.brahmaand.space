{"version":3,"sources":["views/apps/calendar/AddEventSidebar.js","views/apps/brahmaand/leaderboard/LeaderBoardmonthly.jsx","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["eventColors","business","work","personal","others","React","Component","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","LeaderBoardList","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","apply","concat","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","pinned","window","innerWidth","cellRendererFramework","params","_params$data","_params$data$userid","createElement","className","data","userid","username","_params$data2","crrntMonth","_params$data3","_params$data3$userid","meteors","_params$data4","_params$data4$userid","src","profileImg","_params$data5","_params$data5$userid","email","_params$data6","style","crntmnth_planetImg","_params$data7","crntmnth_winnerImg","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","setQuickFilter","filterSize","paginationSetPageSize","Number","_createClass","_componentDidMount","_asyncToGenerator","_callee","_this2","_context","axiosConfig","get","response","console","log","_runthisfunction","_callee2","id","_context2","_x","_this3","_this$state","this","Row","sm","Col","Card","CardBody","UncontrolledDropdown","DropdownToggle","tag","ChevronDown","size","DropdownMenu","right","DropdownItem","onClick","Input","placeholder","onChange","e","target","Button","Ripple","color","exportDataAsCsv","ContextLayout","Consumer","AgGridReact","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","children","node","hidden","check","for","tagPropType","cssModule","xs","md","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","props","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","columnProp","colClass","isObject","_classNames","colSizeInterfix","mapToCssModules","classNames","classes","_extends","row","inline","disabled","FormGroup"],"mappings":"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","file":"static/js/77.d61f5bae.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { X, Tag } from \"react-feather\"\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button\r\n} from \"reactstrap\"\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport \"../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\r\n\r\nconst eventColors = {\r\n  business: \"chip-success\",\r\n  work: \"chip-warning\",\r\n  personal: \"chip-danger\",\r\n  others: \"chip-primary\"\r\n}\r\nclass AddEvent extends React.Component {\r\n  state = {\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    title: \"\",\r\n    label: null,\r\n    allDay: true,\r\n    selectable: true\r\n  }\r\n  handleDateChange = date => {\r\n    this.setState({\r\n      startDate: date\r\n    })\r\n  }\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: date\r\n    })\r\n  }\r\n\r\n  handleLabelChange = label => {\r\n    this.setState({\r\n      label\r\n    })\r\n  }\r\n\r\n  handleAddEvent = id => {\r\n    this.props.handleSidebar(false)\r\n    this.props.addEvent({\r\n      id: id,\r\n      title: this.state.title,\r\n      start: this.state.startDate,\r\n      end: this.state.endDate,\r\n      label: this.state.label === null ? \"others\" : this.state.label,\r\n      allDay: this.state.allDay,\r\n      selectable: this.state.selectable\r\n    })\r\n    this.setState({\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      title: \"\",\r\n      label: null,\r\n      allDay: true,\r\n      selectable: true\r\n    })\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      title: nextProps.eventInfo === null ? \"\" : nextProps.eventInfo.title,\r\n      url: nextProps.eventInfo === null ? \"\" : nextProps.eventInfo.url,\r\n      startDate:\r\n        nextProps.eventInfo === null\r\n          ? new Date()\r\n          : new Date(nextProps.eventInfo.start),\r\n      endDate:\r\n        nextProps.eventInfo === null\r\n          ? new Date()\r\n          : new Date(nextProps.eventInfo.end),\r\n      label: nextProps.eventInfo === null ? null : nextProps.eventInfo.label,\r\n      allDay: nextProps.eventInfo === null ? true : nextProps.eventInfo.allDay,\r\n      selectable:\r\n        nextProps.eventInfo === null ? true : nextProps.eventInfo.selectable\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let events = this.props.events.map(i => i.id)\r\n    let lastId = events.pop()\r\n    let newEventId = lastId + 1\r\n    return (\r\n      <div\r\n        className={`add-event-sidebar ${\r\n          this.props.sidebar ? \"show\" : \"hidden\"\r\n        }`}\r\n      >\r\n        <div className=\"header d-flex justify-content-between\">\r\n          <h3 className=\"text-bold-600 mb-0\">\r\n            {this.props.eventInfo !== null &&\r\n            this.props.eventInfo.title.length > 0\r\n              ? \"Update Event\"\r\n              : \"Add Event\"}\r\n          </h3>\r\n          <div\r\n            className=\"close-icon cursor-pointer\"\r\n            onClick={() => this.props.handleSidebar(false)}\r\n          >\r\n            <X size={20} />\r\n          </div>\r\n        </div>\r\n        <div className=\"add-event-body\">\r\n          <div className=\"category-action d-flex justify-content-between my-50\">\r\n            <div className=\"event-category\">\r\n              {this.state.label !== null ? (\r\n                <div className={`chip ${eventColors[this.state.label]}`}>\r\n                  <div className=\"chip-body\">\r\n                    <div className=\"chip-text text-capitalize\">\r\n                      {this.state.label}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"category-dropdown\">\r\n              <UncontrolledDropdown>\r\n                <DropdownToggle tag=\"div\" className=\"cursor-pointer\">\r\n                  <Tag size={18} />\r\n                </DropdownToggle>\r\n                <DropdownMenu tag=\"ul\" right>\r\n                  <DropdownItem\r\n                    tag=\"li\"\r\n                    onClick={() => this.handleLabelChange(\"business\")}\r\n                  >\r\n                    <span className=\"bullet bullet-success bullet-sm mr-50\"></span>\r\n                    <span>Business</span>\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    tag=\"li\"\r\n                    onClick={() => this.handleLabelChange(\"work\")}\r\n                  >\r\n                    <span className=\"bullet bullet-warning bullet-sm mr-50\"></span>\r\n                    <span>Work</span>\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    tag=\"li\"\r\n                    onClick={() => this.handleLabelChange(\"personal\")}\r\n                  >\r\n                    <span className=\"bullet bullet-danger bullet-sm mr-50\"></span>\r\n                    <span>Personal</span>\r\n                  </DropdownItem>\r\n                  <DropdownItem\r\n                    tag=\"li\"\r\n                    onClick={() => this.handleLabelChange(\"others\")}\r\n                  >\r\n                    <span className=\"bullet bullet-primary bullet-sm mr-50\"></span>\r\n                    <span>Others</span>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </div>\r\n          <div className=\"add-event-fields mt-2\">\r\n            <FormGroup className=\"form-label-group\">\r\n              <Input\r\n                type=\"text\"\r\n                id=\"EventTitle\"\r\n                placeholder=\"Event Title\"\r\n                value={this.state.title}\r\n                onChange={e => this.setState({ title: e.target.value })}\r\n              />\r\n              <Label for=\"EventTitle\">Event Title</Label>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"startDate\">Start Date</Label>\r\n              <Flatpickr\r\n                id=\"startDate\"\r\n                className=\"form-control\"\r\n                value={this.state.startDate}\r\n                onChange={date => this.handleDateChange(date)}\r\n                options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"Y-m-d\", }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"endDate\">End Date</Label>\r\n              <Flatpickr\r\n                id=\"endDate\"\r\n                className=\"form-control\"\r\n                value={this.state.endDate}\r\n                onChange={date => this.handleEndDateChange(date)}\r\n                options={{ altInput: true, altFormat: \"F j, Y\", dateFormat: \"Y-m-d\", }}\r\n              />\r\n            </FormGroup>\r\n          </div>\r\n          <hr className=\"my-2\" />\r\n          <div className=\"add-event-actions text-right\">\r\n            <Button.Ripple\r\n              disabled={this.state.title.length > 0 ? false : true}\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.props.handleSidebar(false)\r\n                if (\r\n                  this.props.eventInfo === null ||\r\n                  this.props.eventInfo.title.length <= 0\r\n                )\r\n                  this.handleAddEvent(newEventId)\r\n                else\r\n                  this.props.updateEvent({\r\n                    id: this.props.eventInfo.id,\r\n                    title: this.state.title,\r\n                    label: this.state.label,\r\n                    start: this.state.startDate,\r\n                    end: this.state.endDate,\r\n                    allDay: true,\r\n                    selectable: true\r\n                  })\r\n              }}\r\n            >\r\n              {this.props.eventInfo !== null &&\r\n              this.props.eventInfo.title.length > 0\r\n                ? \"Update Event\"\r\n                : \"Add Event\"}\r\n            </Button.Ripple>\r\n            <Button.Ripple\r\n              className=\"ml-1\"\r\n              color=\"flat-danger\"\r\n              onClick={() => {\r\n                this.props.handleSidebar(false)\r\n                if (this.props.handleSelectedEvent)\r\n                  this.props.handleSelectedEvent(null)\r\n                else return null\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button.Ripple>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddEvent\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\n// import Calendar from \"../../calendar/Calendar\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport AddEventSidebar from \"../../calendar/AddEventSidebar\";\r\n\r\nclass LeaderBoardList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    value: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 80,\r\n        pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        // filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"Username\",\r\n        // filter: true,\r\n        width: 130,\r\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.userid?.username}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Current Month Point\",\r\n        field: \"crrntMonth\",\r\n        // filter: true,\r\n        width: 150,\r\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params?.data?.crrntMonth}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"All Time Point\",\r\n        field: \"meteors\",\r\n        // filter: true,\r\n        width: 150,\r\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.userid?.meteors}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Image\",\r\n        field: \"file\",\r\n        // filter: true,\r\n        width: 150,\r\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <img\r\n              className=\" d-flex align-items-center cursor-pointer w-50 h-50 rounded\"\r\n              src={params.data?.userid?.profileImg}\r\n            />\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"email\",\r\n        // filter: true,\r\n        width: 150,\r\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <span className=\" d-flex align-items-center cursor-pointer w-50 h-50 rounded\">\r\n              {params.data?.userid?.email}\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Planet Position\",\r\n        field: \"crntmnth_planetImg\",\r\n        // filter: true,\r\n        width: 150,\r\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span style={{ width: \"25px\" }}>\r\n                <img width={40} src={params?.data?.crntmnth_planetImg} />\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Winner Image\",\r\n        field: \"crntmnth_winnerImg\",\r\n        // filter: true,\r\n        width: 150,\r\n        // pinned: window.innerWidth > 992 ? \"left\" : false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <img width={40} src={params?.data?.crntmnth_winnerImg} />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      //   {\r\n      //     headerName: \"Actions\",\r\n      //     field: \"sortorder\",\r\n      //     width: 150,\r\n      //     // pinned: window.innerWidth > 992 ? \"right\" : false,\r\n      //     cellRendererFramework: (params) => {\r\n      //       return (\r\n      //         <div className=\"actions cursor-pointer\">\r\n      //           <Route\r\n      //             render={({ history }) => (\r\n      //               <Edit\r\n      //                 className=\"mr-50\"\r\n      //                 size=\"25px\"\r\n      //                 color=\"blue\"\r\n      //                 onClick={() =>\r\n      //                   history.push(\r\n      //                     `/app/brahmaand/leaderboard/editLeader/${params.data._id}`\r\n      //                   )\r\n      //                 }\r\n      //               />\r\n      //             )}\r\n      //           />\r\n\r\n      //           <Trash2\r\n      //             className=\"mr-50\"\r\n      //             size=\"25px\"\r\n      //             color=\"red\"\r\n      //             onClick={() => {\r\n      //               let selectedData = this.gridApi.getSelectedRows();\r\n      //               this.runthisfunction(params.data._id);\r\n      //               this.gridApi.updateRowData({ remove: selectedData });\r\n      //             }}\r\n      //           />\r\n      //         </div>\r\n      //       );\r\n      //     },\r\n      //   },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig\r\n      .get(\"/user/karma_crrnt_month\", {\r\n        // headers: {\r\n        //   \"auth-adtoken\": localStorage.getItem(\"auth-adtoken\"),\r\n        // },\r\n      })\r\n      .then((response) => {\r\n        const rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/dlt_startup/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row sm=\"12\">\r\n          <Col>\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col sm=\"6\" className=\"tb\">\r\n                  <h1 className=\"float-left\">Leader Board List-Monthly</h1>\r\n                </Col>\r\n                {/* <Col style={{ marginLeft: \"8rem\" }}>\r\n                                    <h5>Start Date</h5>\r\n                                    <Input className=\"btn btn-success\"\r\n                                        required\r\n                                        type=\"date\"\r\n                                        name=\"date\"\r\n                                        placeholder=\"Enter Date\"\r\n                                        value={this.state.date}\r\n                                        onChange={this.changeHandler}\r\n                                    ></Input>\r\n                                </Col>\r\n                                <Col> <h5>End Date</h5>\r\n                                    <Input className=\"btn btn-success\"\r\n                                        required\r\n                                        type=\"date\"\r\n                                        name=\"date\"\r\n                                        placeholder=\"Enter Date\"\r\n                                        value={this.state.date}\r\n                                        onChange={this.changeHandler}\r\n                                    ></Input>\r\n\r\n                                </Col> */}\r\n              </Row>\r\n\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default LeaderBoardList;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}